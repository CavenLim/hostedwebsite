{"ast":null,"code":"import _classCallCheck from \"/Users/cavenlim/CavenLim site backup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/cavenlim/CavenLim site backup/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/cavenlim/CavenLim site backup/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/cavenlim/CavenLim site backup/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from 'three'; // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar _changeEvent = {\n  type: 'change'\n};\nvar _startEvent = {\n  type: 'start'\n};\nvar _endEvent = {\n  type: 'end'\n};\n\nvar OrbitControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(OrbitControls, _EventDispatcher);\n\n  var _super = _createSuper(OrbitControls);\n\n  function OrbitControls(object, domElement) {\n    var _this;\n\n    _classCallCheck(this, OrbitControls);\n\n    _this = _super.call(this);\n    if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n    if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n    _this.object = object;\n    _this.domElement = domElement;\n    _this.domElement.style.touchAction = 'none'; // disable touch scroll\n    // Set to false to disable this control\n\n    _this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n    _this.target = new Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n    _this.minDistance = 0;\n    _this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n    _this.minZoom = 0;\n    _this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n\n    _this.minPolarAngle = 0; // radians\n\n    _this.maxPolarAngle = Math.PI; // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n    _this.minAzimuthAngle = -Infinity; // radians\n\n    _this.maxAzimuthAngle = Infinity; // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n\n    _this.enableDamping = false;\n    _this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n\n    _this.enableZoom = true;\n    _this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n    _this.enableRotate = true;\n    _this.rotateSpeed = 1.0; // Set to false to disable panning\n\n    _this.enablePan = true;\n    _this.panSpeed = 1.0;\n    _this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\n    _this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n    _this.autoRotate = false;\n    _this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n    // The four arrow keys\n\n    _this.keys = {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    }; // Mouse buttons\n\n    _this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    }; // Touch fingers\n\n    _this.touches = {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    }; // for reset\n\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.zoom0 = _this.object.zoom; // the target DOM element for key events\n\n    _this._domElementKeyEvents = null; //\n    // public methods\n    //\n\n    _this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n\n    _this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n\n    _this.getDistance = function () {\n      return this.object.position.distanceTo(this.target);\n    };\n\n    _this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    _this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n\n    _this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(_changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    _this.update = function () {\n      var offset = new Vector3(); // so camera.up is the orbit axis\n\n      var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      var quatInverse = quat.clone().invert();\n      var lastPosition = new Vector3();\n      var lastQuaternion = new Quaternion();\n      var twoPI = 2 * Math.PI;\n      return function update() {\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        var min = scope.minAzimuthAngle;\n        var max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(_changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    }();\n\n    _this.dispose = function () {\n      scope.domElement.removeEventListener('contextmenu', onContextMenu);\n      scope.domElement.removeEventListener('pointerdown', onPointerDown);\n      scope.domElement.removeEventListener('pointercancel', onPointerCancel);\n      scope.domElement.removeEventListener('wheel', onMouseWheel);\n      scope.domElement.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    var scope = _assertThisInitialized(_this);\n\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    var state = STATE.NONE;\n    var EPS = 0.000001; // current position in spherical coordinates\n\n    var spherical = new Spherical();\n    var sphericalDelta = new Spherical();\n    var scale = 1;\n    var panOffset = new Vector3();\n    var zoomChanged = false;\n    var rotateStart = new Vector2();\n    var rotateEnd = new Vector2();\n    var rotateDelta = new Vector2();\n    var panStart = new Vector2();\n    var panEnd = new Vector2();\n    var panDelta = new Vector2();\n    var dollyStart = new Vector2();\n    var dollyEnd = new Vector2();\n    var dollyDelta = new Vector2();\n    var pointers = [];\n    var pointerPositions = {};\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = function () {\n      var v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n\n    var panUp = function () {\n      var v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    var pan = function () {\n      var offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        var element = scope.domElement;\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseUp() {// no-op\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      var needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly() {\n      var dx = pointers[0].pageX - pointers[1].pageX;\n      var dy = pointers[0].pageY - pointers[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        var position = getSecondPointerPosition(event);\n        var x = 0.5 * (event.pageX + position.x);\n        var y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        var position = getSecondPointerPosition(event);\n        var x = 0.5 * (event.pageX + position.x);\n        var y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      var position = getSecondPointerPosition(event);\n      var dx = event.pageX - position.x;\n      var dy = event.pageY - position.y;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n\n    function handleTouchEnd() {// no-op\n    } //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId);\n        scope.domElement.addEventListener('pointermove', onPointerMove);\n        scope.domElement.addEventListener('pointerup', onPointerUp);\n      } //\n\n\n      addPointer(event);\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n\n    function onPointerUp(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchEnd();\n      } else {\n        onMouseUp(event);\n      }\n\n      removePointer(event); //\n\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId);\n        scope.domElement.removeEventListener('pointermove', onPointerMove);\n        scope.domElement.removeEventListener('pointerup', onPointerUp);\n      }\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n\n    function onMouseDown(event) {\n      var mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseUp(event) {\n      handleMouseUp(event);\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n      event.preventDefault();\n      scope.dispatchEvent(_startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(_endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event);\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event);\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd(event) {\n      handleTouchEnd(event);\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n\n    function addPointer(event) {\n      pointers.push(event);\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n\n      for (var i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      var position = pointerPositions[event.pointerId];\n\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n\n      position.set(event.pageX, event.pageY);\n    }\n\n    function getSecondPointerPosition(event) {\n      var pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    } //\n\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu);\n    scope.domElement.addEventListener('pointerdown', onPointerDown);\n    scope.domElement.addEventListener('pointercancel', onPointerCancel);\n    scope.domElement.addEventListener('wheel', onMouseWheel, {\n      passive: false\n    }); // force an update at start\n\n    _this.update();\n\n    return _this;\n  }\n\n  return OrbitControls;\n}(EventDispatcher); // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nvar MapControls = /*#__PURE__*/function (_OrbitControls) {\n  _inherits(MapControls, _OrbitControls);\n\n  var _super2 = _createSuper(MapControls);\n\n  function MapControls(object, domElement) {\n    var _this2;\n\n    _classCallCheck(this, MapControls);\n\n    _this2 = _super2.call(this, object, domElement);\n    _this2.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    _this2.mouseButtons.LEFT = MOUSE.PAN;\n    _this2.mouseButtons.RIGHT = MOUSE.ROTATE;\n    _this2.touches.ONE = TOUCH.PAN;\n    _this2.touches.TWO = TOUCH.DOLLY_ROTATE;\n    return _this2;\n  }\n\n  return MapControls;\n}(OrbitControls);\n\nexport { OrbitControls, MapControls };","map":{"version":3,"sources":["/Users/cavenlim/CavenLim site backup/node_modules/three/examples/jsm/controls/OrbitControls.js"],"names":["EventDispatcher","MOUSE","Quaternion","Spherical","TOUCH","Vector2","Vector3","_changeEvent","type","_startEvent","_endEvent","OrbitControls","object","domElement","undefined","console","warn","document","error","style","touchAction","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","x","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","needsUpdate","code","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","handleTouchEnd","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","onTouchEnd","onMouseUp","removePointer","releasePointerCapture","mouseAction","button","ctrlKey","metaKey","shiftKey","trackPointer","DOLLY_ROTATE","push","i","splice","pointer","passive","MapControls"],"mappings":"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","sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchEnd();\n\n\t\t\t} else {\n\n\t\t\t\tonMouseUp( event );\n\n\t\t\t}\n\n\t\t\tremovePointer( event );\n\n\t\t\t//\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseUp( event ) {\n\n\t\t\thandleMouseUp( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchEnd( event ) {\n\n\t\t\thandleTouchEnd( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n"]},"metadata":{},"sourceType":"module"}