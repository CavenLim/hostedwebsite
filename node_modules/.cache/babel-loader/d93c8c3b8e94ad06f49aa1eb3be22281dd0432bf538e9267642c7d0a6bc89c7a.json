{"ast":null,"code":"import { useEnvironment } from \"@chakra-ui/react-env\";\nimport { isBrowser } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nexport function useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n  var [matches, setMatches] = React.useState(queries.map(query => isSupported ? !!env.window.matchMedia(query).matches : false));\n  useSafeLayoutEffect(() => {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(query => env.window.matchMedia(query));\n    var listenerList = mediaQueryList.map((mediaQuery, index) => {\n      var listener = () => setMatches(prev => prev.map((prevValue, idx) => index === idx ? !!mediaQuery.matches : prevValue));\n      mediaQuery.addListener(listener);\n      return listener;\n    });\n    return () => {\n      mediaQueryList.forEach((mediaQuery, index) => {\n        mediaQuery.removeListener(listenerList[index]);\n      });\n    };\n  }, [query]);\n  return matches;\n}","map":{"version":3,"names":["useEnvironment","isBrowser","React","useSafeLayoutEffect","useLayoutEffect","useEffect","useMediaQuery","query","env","queries","Array","isArray","isSupported","window","matches","setMatches","useState","map","matchMedia","undefined","mediaQueryList","listenerList","mediaQuery","index","listener","prev","prevValue","idx","addListener","forEach","removeListener"],"sources":["/Users/cavenlim/CavenLim site backup/node_modules/@chakra-ui/media-query/src/use-media-query.ts"],"sourcesContent":["import { useEnvironment } from \"@chakra-ui/react-env\"\nimport { isBrowser } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nconst useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect\n\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\nexport function useMediaQuery(query: string | string[]): boolean[] {\n  const env = useEnvironment()\n  const queries = Array.isArray(query) ? query : [query]\n  const isSupported = isBrowser && \"matchMedia\" in env.window\n\n  const [matches, setMatches] = React.useState(\n    queries.map((query) =>\n      isSupported ? !!env.window.matchMedia(query).matches : false,\n    ),\n  )\n\n  useSafeLayoutEffect(() => {\n    if (!isSupported) return undefined\n\n    const mediaQueryList = queries.map((query) => env.window.matchMedia(query))\n\n    const listenerList = mediaQueryList.map((mediaQuery, index) => {\n      const listener = () =>\n        setMatches((prev) =>\n          prev.map((prevValue, idx) =>\n            index === idx ? !!mediaQuery.matches : prevValue,\n          ),\n        )\n\n      mediaQuery.addListener(listener)\n\n      return listener\n    })\n\n    return () => {\n      mediaQueryList.forEach((mediaQuery, index) => {\n        mediaQuery.removeListener(listenerList[index])\n      })\n    }\n  }, [query])\n\n  return matches\n}\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,sBAA/B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,IAAMC,mBAAmB,GAAGF,SAAS,GAAGC,KAAK,CAACE,eAAT,GAA2BF,KAAK,CAACG,SAAtE;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAATA,CAAuBC,KAAvB,EAA4D;EACjE,IAAMC,GAAG,GAAGR,cAAc,EAA1B;EACA,IAAMS,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcJ,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAA/C;EACA,IAAMK,WAAW,GAAGX,SAAS,IAAI,gBAAgBO,GAAG,CAACK,MAArD;EAEA,IAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,KAAK,CAACc,QAAN,CAC5BP,OAAO,CAACQ,GAAR,CAAaV,KAAD,IACVK,WAAW,GAAG,CAAC,CAACJ,GAAG,CAACK,MAAJ,CAAWK,UAAX,CAAsBX,KAAtB,EAA6BO,OAAlC,GAA4C,KADzD,CAD4B,CAA9B;EAMAX,mBAAmB,CAAC,MAAM;IACxB,IAAI,CAACS,WAAL,EAAkB,OAAOO,SAAP;IAElB,IAAMC,cAAc,GAAGX,OAAO,CAACQ,GAAR,CAAaV,KAAD,IAAWC,GAAG,CAACK,MAAJ,CAAWK,UAAX,CAAsBX,KAAtB,CAAvB,CAAvB;IAEA,IAAMc,YAAY,GAAGD,cAAc,CAACH,GAAf,CAAmB,CAACK,UAAD,EAAaC,KAAb,KAAuB;MAC7D,IAAMC,QAAQ,GAAGA,CAAA,KACfT,UAAU,CAAEU,IAAD,IACTA,IAAI,CAACR,GAAL,CAAS,CAACS,SAAD,EAAYC,GAAZ,KACPJ,KAAK,KAAKI,GAAV,GAAgB,CAAC,CAACL,UAAU,CAACR,OAA7B,GAAuCY,SADzC,CADQ,CADZ;MAOAJ,UAAU,CAACM,WAAX,CAAuBJ,QAAvB;MAEA,OAAOA,QAAP;IACD,CAXoB,CAArB;IAaA,OAAO,MAAM;MACXJ,cAAc,CAACS,OAAf,CAAuB,CAACP,UAAD,EAAaC,KAAb,KAAuB;QAC5CD,UAAU,CAACQ,cAAX,CAA0BT,YAAY,CAACE,KAAD,CAAtC;MACD,CAFD;IAGD,CAJD;EAKD,CAvBkB,EAuBhB,CAAChB,KAAD,CAvBgB,CAAnB;EAyBA,OAAOO,OAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}