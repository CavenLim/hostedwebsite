{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nexport var ButtonIcon = props => {\n  var {\n      children,\n      className\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"children\", \"className\"]);\n  var _children = /*#__PURE__*/React.isValidElement(children) ? /*#__PURE__*/React.cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  var _className = cx(\"chakra-button__icon\", className);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    display: \"inline-flex\",\n    alignSelf: \"center\",\n    flexShrink: 0\n  }, rest, {\n    className: _className\n  }), _children);\n};\nif (__DEV__) {\n  ButtonIcon.displayName = \"ButtonIcon\";\n}","map":{"version":3,"names":["chakra","cx","__DEV__","React","ButtonIcon","props","children","className","rest","_objectWithoutPropertiesLoose","_children","isValidElement","cloneElement","focusable","_className","createElement","span","_extends","display","alignSelf","flexShrink","displayName"],"sources":["C:\\Code Respositories\\hostedwebsite\\node_modules\\@chakra-ui\\button\\src\\button-icon.tsx"],"sourcesContent":["import { chakra, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport const ButtonIcon: React.FC<HTMLChakraProps<\"span\">> = (props) => {\n  const { children, className, ...rest } = props\n\n  const _children = React.isValidElement(children)\n    ? React.cloneElement(children, {\n        \"aria-hidden\": true,\n        focusable: false,\n      })\n    : children\n\n  const _className = cx(\"chakra-button__icon\", className)\n\n  return (\n    <chakra.span\n      display=\"inline-flex\"\n      alignSelf=\"center\"\n      flexShrink={0}\n      {...rest}\n      className={_className}\n    >\n      {_children}\n    </chakra.span>\n  )\n}\n\nif (__DEV__) {\n  ButtonIcon.displayName = \"ButtonIcon\"\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,MAAT,QAAwC,mBAAxC;AACA,SAASC,EAAT,EAAaC,OAAb,QAA4B,kBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,UAA6C,GAAIC,KAAD,IAAW;EACtE,IAAM;MAAEC,QAAF;MAAYC;IAAZ,IAAmCF,KAAzC;IAAgCG,IAAhC,GAAAC,6BAAA,CAAyCJ,KAAzC;EAEA,IAAMK,SAAS,GAAG,aAAAP,KAAK,CAACQ,cAAN,CAAqBL,QAArB,iBACdH,KAAK,CAACS,YAAN,CAAmBN,QAAnB,EAA6B;IAC3B,eAAe,IADY;IAE3BO,SAAS,EAAE;EAFgB,CAA7B,CADc,GAKdP,QALJ;EAOA,IAAMQ,UAAU,GAAGb,EAAE,CAAC,qBAAD,EAAwBM,SAAxB,CAArB;EAEA,oBACEJ,KAAA,CAAAY,aAAA,CAACf,MAAD,CAAQgB,IAAR,EAAAC,QAAA;IACEC,OAAO,EAAC,aADV;IAEEC,SAAS,EAAC,QAFZ;IAGEC,UAAU,EAAE;EAHd,GAIMZ,IAJN;IAKED,SAAS,EAAEO;EALb,IAOGJ,SAPH,CADF;AAWD,CAvBM;AAyBP,IAAIR,OAAJ,EAAa;EACXE,UAAU,CAACiB,WAAX,GAAyB,YAAzB;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}