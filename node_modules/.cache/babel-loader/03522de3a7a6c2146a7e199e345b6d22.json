{"ast":null,"code":"import { reject } from 'bluebird';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nexport function loadGLTFModel(scene, glbPath, options = {\n  receiveShadow: true,\n  castShadow: true\n}) {\n  const {\n    receiveShadow,\n    castShadow\n  } = options;\n  return new Promise((resolve, reject) => {\n    const loader = new GLTFLoader();\n    loader.load(glbPath, gltf => {\n      const obj = gltf.scene;\n      obj.name = 'dog';\n      obj.position.y = 0;\n      obj.position.x = 0;\n      obj.receiveShadow = receiveShadow;\n      obj.castShadow = castShadow;\n      scene.add(obj);\n      obj.traverse(function (child) {\n        if (child.isMesh) {\n          child.castShadow = castShadow;\n          child.receiveShadow = receiveShadow;\n        }\n      });\n      resolve(obj);\n    }, undefined, function (error) {\n      reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/cavenlim/CavenLim site backup/src/Components/Model.js"],"names":["reject","GLTFLoader","loadGLTFModel","scene","glbPath","options","receiveShadow","castShadow","Promise","resolve","loader","load","gltf","obj","name","position","y","x","add","traverse","child","isMesh","undefined","error"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAAQC,UAAR,QAAyB,uCAAzB;AAEA,OAAO,SAASC,aAAT,CACHC,KADG,EACGC,OADH,EACWC,OAAO,GAAG;AAACC,EAAAA,aAAa,EAAC,IAAf;AAAoBC,EAAAA,UAAU,EAAC;AAA/B,CADrB,EAEN;AACG,QAAK;AAACD,IAAAA,aAAD;AAAeC,IAAAA;AAAf,MAA6BF,OAAlC;AACA,SAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAST,MAAT,KAAmB;AAClC,UAAMU,MAAM,GAAG,IAAIT,UAAJ,EAAf;AAEAS,IAAAA,MAAM,CAACC,IAAP,CACIP,OADJ,EAEIQ,IAAI,IAAG;AACH,YAAMC,GAAG,GAAGD,IAAI,CAACT,KAAjB;AACAU,MAAAA,GAAG,CAACC,IAAJ,GAAW,KAAX;AACAD,MAAAA,GAAG,CAACE,QAAJ,CAAaC,CAAb,GAAiB,CAAjB;AACAH,MAAAA,GAAG,CAACE,QAAJ,CAAaE,CAAb,GAAiB,CAAjB;AACAJ,MAAAA,GAAG,CAACP,aAAJ,GAAoBA,aAApB;AACAO,MAAAA,GAAG,CAACN,UAAJ,GAAiBA,UAAjB;AACAJ,MAAAA,KAAK,CAACe,GAAN,CAAUL,GAAV;AAEAA,MAAAA,GAAG,CAACM,QAAJ,CAAa,UAASC,KAAT,EAAe;AACxB,YAAGA,KAAK,CAACC,MAAT,EAAgB;AACZD,UAAAA,KAAK,CAACb,UAAN,GAAmBA,UAAnB;AACAa,UAAAA,KAAK,CAACd,aAAN,GAAsBA,aAAtB;AACH;AACJ,OALD;AAOAG,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAnBL,EAoBIS,SApBJ,EAqBI,UAASC,KAAT,EAAe;AACXvB,MAAAA,MAAM,CAACuB,KAAD,CAAN;AAEH,KAxBL;AA0BH,GA7BM,CAAP;AA8BH","sourcesContent":["import { reject } from 'bluebird'\nimport {GLTFLoader} from 'three/examples/jsm/loaders/GLTFLoader'\n\nexport function loadGLTFModel(\n    scene,glbPath,options = {receiveShadow:true,castShadow:true}\n){\n    const{receiveShadow,castShadow} = options\n    return new Promise((resolve,reject) =>{\n        const loader = new GLTFLoader()\n\n        loader.load(\n            glbPath,\n            gltf =>{\n                const obj = gltf.scene\n                obj.name = 'dog'\n                obj.position.y = 0\n                obj.position.x = 0\n                obj.receiveShadow = receiveShadow\n                obj.castShadow = castShadow\n                scene.add(obj)\n\n                obj.traverse(function(child){\n                    if(child.isMesh){\n                        child.castShadow = castShadow\n                        child.receiveShadow = receiveShadow\n                    }\n                })\n\n                resolve(obj)\n            }, \n            undefined,\n            function(error){\n                reject(error)\n\n            }\n        )\n    })\n}\n"]},"metadata":{},"sourceType":"module"}