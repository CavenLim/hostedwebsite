{"ast":null,"code":"import _slicedToArray from\"/Users/vincentneo/Documents/GitHub/CavenLim site backup/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/vincentneo/Documents/GitHub/CavenLim site backup/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState,useEffect}from'react';import styled from'styled-components';import SectTitle from'../Components/SectTitle';import{MdSearch}from'react-icons/md';import ProjectItem from'../Components/ProjectItem';import ProjectInfo from'../assets/data/projects';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProjectStyles=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n\\n    padding: 10rem 0;\\n\\n    .allProjects{\\n        display: grid;\\n        grid-template-columns:repeat(auto-fill,minmax(300px,1fr));\\n        gap:5rem;\\n        margin-top:5rem;\\n    }\\n    .searchBar{\\n        position: relative;\\n        width: 300px;\\n        margin-top: 5rem;\\n    }\\n    .searchBar input{\\n        width:100%;\\n        font-size: 2rem;\\n        padding: 0.8rem;\\n        color:var(--black);\\n        border-radius: 6px;\\n        outline: none;\\n        border:none;\\n    }\\n    .searchBar .searchIcon{\\n        position: absolute;\\n        width: 2rem;\\n        right:1rem;\\n    }\\n\\n    .searchBar .searchIcon path{\\n        color:var(--deep-dark);\\n       \\n    }\\n\\n    @media only screen and (max-width:760px){\\n        .searchBar,.searchBar form, .searchBar input{\\n            width: 100%;\\n        }\\n\\n    }\\n\\n\\n\\n\\n\\n\\n\"])));export default function Projects(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchText=_useState2[0],setSearchText=_useState2[1];var _useState3=useState(ProjectInfo),_useState4=_slicedToArray(_useState3,2),projectData=_useState4[0],setProjectData=_useState4[1];useEffect(function(){if(searchText==='')return;setProjectData(function(){return ProjectInfo.filter(function(item){return item.name.toLowerCase().match(searchText.toLowerCase());});});},[searchText]);function handleChange(e){e.preventDefault();setSearchText(e.target.value);if(!e.target.value.length>0){setProjectData(ProjectInfo);}}return/*#__PURE__*/_jsx(ProjectStyles,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(SectTitle,{heading:\"Projects\",subheading:\"my recent works\"}),/*#__PURE__*/_jsx(\"div\",{className:\"searchBar\",children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Project name\",value:searchText,onChange:handleChange}),/*#__PURE__*/_jsx(MdSearch,{className:\"searchIcon\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"allProjects\",children:projectData.map(function(item){return/*#__PURE__*/_jsx(ProjectItem,{title:item.name,desc:item.desc,img:item.img},item.id);})})]})});}","map":{"version":3,"sources":["/Users/vincentneo/Documents/GitHub/CavenLim site backup/src/pages/Projects.js"],"names":["React","useState","useEffect","styled","SectTitle","MdSearch","ProjectItem","ProjectInfo","ProjectStyles","div","Projects","searchText","setSearchText","projectData","setProjectData","filter","item","name","toLowerCase","match","handleChange","e","preventDefault","target","value","length","map","desc","img","id"],"mappings":"wTAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAqB,yBAArB,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,C,wFAGA,GAAMC,CAAAA,aAAa,CAAGL,MAAM,CAACM,GAAV,05BAAnB,CAmDA,cAAe,SAASC,CAAAA,QAAT,EAAoB,CAC/B,cAAmCT,QAAQ,CAAC,EAAD,CAA3C,wCAAOU,UAAP,eAAkBC,aAAlB,eACA,eAAqCX,QAAQ,CAACM,WAAD,CAA7C,yCAAOM,WAAP,eAAmBC,cAAnB,eAEAZ,SAAS,CAAC,UAAM,CACR,GAAIS,UAAU,GAAK,EAAnB,CAAuB,OACvBG,cAAc,CAAC,iBACXP,CAAAA,WAAW,CAACQ,MAAZ,CAAmB,SAACC,IAAD,QACfA,CAAAA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,KAAxB,CAA8BR,UAAU,CAACO,WAAX,EAA9B,CADe,EAAnB,CADW,EAAD,CAAd,CASH,CAXI,CAWH,CAACP,UAAD,CAXG,CAAT,CAaA,QAASS,CAAAA,YAAT,CAAsBC,CAAtB,CAAwB,CACpBA,CAAC,CAACC,cAAF,GACAV,aAAa,CAACS,CAAC,CAACE,MAAF,CAASC,KAAV,CAAb,CAEA,GAAI,CAACH,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,MAAhB,CAAyB,CAA7B,CAA+B,CAC3BX,cAAc,CAAEP,WAAF,CAAd,CAEH,CAEJ,CACD,mBACI,KAAC,aAAD,wBACE,aAAK,SAAS,CAAC,WAAf,wBACI,KAAC,SAAD,EACA,OAAO,CAAG,UADV,CACqB,UAAU,CAAG,iBADlC,EADJ,cAKE,YAAK,SAAS,CAAC,WAAf,uBACI,qCACI,cAAO,IAAI,CAAC,MAAZ,CAAmB,WAAW,CAAC,cAA/B,CAA8C,KAAK,CAAEI,UAArD,CACA,QAAQ,CAAIS,YADZ,EADJ,cAKI,KAAC,QAAD,EAAU,SAAS,CAAC,YAApB,EALJ,GADJ,EALF,cAeE,YAAK,SAAS,CAAC,aAAf,UACKP,WAAW,CAACa,GAAZ,CAAgB,SAAAV,IAAI,qBACjB,KAAC,WAAD,EACI,KAAK,CAAIA,IAAI,CAACC,IADlB,CAEI,IAAI,CAAID,IAAI,CAACW,IAFjB,CAGI,GAAG,CAAIX,IAAI,CAACY,GAHhB,EAAoBZ,IAAI,CAACa,EAAzB,CADiB,EAApB,CADL,EAfF,GADF,EADJ,CAkCH","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport SectTitle from'../Components/SectTitle';\nimport { MdSearch } from 'react-icons/md';\nimport ProjectItem from '../Components/ProjectItem';\nimport ProjectInfo from '../assets/data/projects';\n\n\nconst ProjectStyles = styled.div`\n\n    padding: 10rem 0;\n\n    .allProjects{\n        display: grid;\n        grid-template-columns:repeat(auto-fill,minmax(300px,1fr));\n        gap:5rem;\n        margin-top:5rem;\n    }\n    .searchBar{\n        position: relative;\n        width: 300px;\n        margin-top: 5rem;\n    }\n    .searchBar input{\n        width:100%;\n        font-size: 2rem;\n        padding: 0.8rem;\n        color:var(--black);\n        border-radius: 6px;\n        outline: none;\n        border:none;\n    }\n    .searchBar .searchIcon{\n        position: absolute;\n        width: 2rem;\n        right:1rem;\n    }\n\n    .searchBar .searchIcon path{\n        color:var(--deep-dark);\n       \n    }\n\n    @media only screen and (max-width:760px){\n        .searchBar,.searchBar form, .searchBar input{\n            width: 100%;\n        }\n\n    }\n\n\n\n\n\n\n`\n\n\n\nexport default function Projects() {\n    const [searchText,setSearchText] = useState('');\n    const [projectData,setProjectData] = useState(ProjectInfo); \n\n    useEffect(() => {\n            if (searchText === '') return;\n            setProjectData(()=>\n                ProjectInfo.filter((item) =>\n                    item.name.toLowerCase().match(searchText.toLowerCase())\n                \n\n                )\n            );\n\n            \n        },[searchText]);\n\n    function handleChange(e){\n        e.preventDefault();\n        setSearchText(e.target.value);\n\n        if (!e.target.value.length > 0){\n            setProjectData (ProjectInfo);\n\n        }\n\n    }\n    return (\n        <ProjectStyles>\n          <div className=\"container\">\n              <SectTitle\n              heading = \"Projects\" subheading = \"my recent works\"></SectTitle>\n\n\n            <div className=\"searchBar\">\n                <form>\n                    <input type=\"text\" placeholder=\"Project name\" value={searchText} \n                    onChange = {handleChange}\n                    \n                    />\n                    <MdSearch className=\"searchIcon\" />\n                </form>\n            </div>\n\n            <div className=\"allProjects\">\n                {projectData.map(item =>(\n                    <ProjectItem key = {item.id}\n                        title = {item.name}\n                        desc = {item.desc}\n                        img = {item.img}\n                    />\n                )) }\n         \n\n            </div>\n       \n\n          </div>\n        \n        </ProjectStyles>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}