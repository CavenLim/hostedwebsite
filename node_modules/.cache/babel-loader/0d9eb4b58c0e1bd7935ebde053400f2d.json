{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/cavenlim/CavenLim site backup/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React from'react';import PText from'../Components/Text';import Button from'../Components/Button';import DuckMode from'../assets/Images/DuckModeIcon.png';import IconsAll from'../assets/DesignConceptTaskCow/IconsAll.png';import topTaskCow from'../assets/Images/topTaskCow.png';import styled from'styled-components';import AboutInfoItem from'../Components/AboutInfoItem';import SectTitle from'../Components/SectTitle';import{Swiper,SwiperSlide}from'swiper/react';import duckModeSS from'../assets/data/duckModeSS';import AboutDesigns from'../Components/AboutDesigns';import SwiperCore,{Navigation}from'swiper';import{GrAppleAppStore}from'react-icons/gr';//duckMode design concepts images\nimport DarkMode from'../assets/DuckModeImages/DarkMode.png';import LightMode from'../assets/DuckModeImages/LightMode.png';import SfSymbol from'../assets/DuckModeImages/SfSymbols.png';import Neuro from'../assets/DuckModeImages/Neuro.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";SwiperCore.use([Navigation]);// for new windows open url\nfunction _onClick(urlName){window.open(urlName,'_blank'//open in a new window.\n);}var BtnGo=styled.button(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n\\n    background-color: transparent;\\n    border-radius:4rem;\\n    border: none; \\n    color: white;\\n    width:5rem ;\\n    height:5rem ;\\n    font-size: 0.5rem; \\n    cursor: pointer;\\n \\n\\n    path{\\n        color:var(--white);\\n     \\n    }\\n\\n   \\n    @media only screen and (max-width:760px){\\n        align-self: center;\\n       justify-self: center;\\n       \\n   \\n    }\\n    \\n\\n\\n\\n\"])));var AboutTaskCowStyles=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n.projectItemImg{\\n    width: 100%;\\n    height: 100%;\\n    overflow: hidden;\\n    border-radius: 12px;\\n    display: inline-block;\\n    border:3px solid var(--gray-2);\\n    img{\\n        height:100%;\\n    }\\n}\\n\\n.projectInfo{\\n    margin-top: 1rem;\\n    background-color: var(--deep-dark);\\n    padding:1rem;\\n    border-radius: 12px;\\n}\\n.projectItemTitle{\\n    font-size: 2.2rem;\\n}\\n\\n.projectItemDesc{\\n    font-size:1.6rem;\\n    font-family: -apple-system, BlinkMacSystemFont;\\n    margin-top: 1rem;\\n}\\n\\n/* @media only screen and (max-width:760px){\\n\\n    .projectItemImg{\\n        height: 350px;\\n    }\\n\\n} */\\n\\n\\n\"])));var AboutImagesStyles=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    padding: 10rem 0 ;\\n\\n    .projAllItem{\\n        display: flex;\\n        gap:3rem;\\n        margin-top: 5rem;\\n        align-self: center;\\n\\n\\n    }\\n\\n    .swiper-container{\\n        padding-top:8rem;\\n        max-width: 100%;\\n    }\\n\\n   \\n    .swiper-button-prev,.swiper-button-next{\\n        position: absolute;\\n        height:50px;\\n        width: 50px;\\n        background-color: var(--deep-dark);\\n        z-index:10;\\n        right:60px;\\n        left:auto;\\n        top:0;\\n        transform:translateY(50%);\\n        color:var(--gray-1);\\n        border-radius: 8px;\\n    }\\n    .swiper-button-next{\\n        right:0;\\n    }\\n    .swiper-button-prev:after,.swiper-button-next:after{\\n        font-size:2rem;\\n    }\\n    .projectItemImg{\\n                height: 80%;\\n                width: 80%;\\n                margin-left:4.3rem;\\n               \\n    }   \\n\\n    @media only screen and (max-width:760px){\\n        .projAllItem{\\n            flex-direction: column;\\n            max-width: 400px;\\n            margin:0 auto;\\n            margin-top:7rem;\\n            gap:5rem;\\n            .projectItemImg{\\n                margin-left:6rem;\\n                width: 60%;\\n                \\n            }\\n        }\\n    }\\n\\n\\n\\n\"])));var AboutPageStyles=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    padding:20rem 0 10rem 0;\\n    .topSect{\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        \\n        gap:2rem;\\n    }\\n\\n    .topSect2{\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        flex-direction: column;\\n        \\n        gap:2rem;\\n    }\\n    .left{\\n        flex:3;\\n        \\n    }\\n    .right{\\n        flex:2;\\n       \\n       \\n    }\\n    .right2{\\n        /* flex:33.33%; */\\n        display: row;\\n        img{\\n            margin:1rem;\\n            width: 300px;\\n            height: 300px;\\n            object-fit: contain;\\n           \\n            \\n           \\n           \\n        }\\n       \\n    }\\n\\n    \\n\\n    .topLeft{\\n        flex:3\\n    }\\n    .topRight{\\n        flex:3\\n    }\\n    .aboutSubHead{\\n        font-size: 2.2rem;\\n        margin-bottom:2rem;\\n        display: block;\\n        margin-right: 1rem;\\n        \\n        span{\\n            background-color: var(--deep-dark);\\n            padding:1rem;\\n            border-radius:9px;\\n           \\n        }\\n    }\\n\\n    .aboutHeader{\\n        font-size: 3.6rem;\\n        margin-bottom:3rem;\\n    }\\n    .aboutInfo{\\n        margin-bottom: 4rem;\\n        .para{\\n            max-width: 100%;\\n        }\\n    }\\n   \\n    .aboutInfoItems{\\n        margin-top: 15rem;\\n    }\\n    .aboutInfoItem{\\n        margin-bottom:10rem;\\n    }\\n    .aboutHeader{\\n        font-size: 3.6rem;\\n        text-transform:uppercase;\\n    }\\n\\n    @media only screen and (max-width:830px){\\n        padding:10rem 0 ;\\n        .topSect{\\n            flex-direction: column;\\n            gap:5rem;\\n\\n        }\\n        .right2{\\n            display: flex;\\n            flex-direction: column;\\n            span{\\n                display: flex;\\n                flex-direction:column;\\n                margin-top:1rem;\\n            }\\n        }\\n        .aboutSubHead{\\n            font-size: 1.7rem;\\n            span{\\n                display: flex;\\n                flex-direction:column;\\n                margin-top:1rem;\\n            }\\n        }\\n        .aboutHeader{\\n            font-size: 3rem;\\n        }\\n\\n    }\\n\\n\\n\"])));export default function DuckModeDetails(){return/*#__PURE__*/_jsx(AboutPageStyles,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"topSect\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"left\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"aboutSubHead\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"SwiftUi\"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:\"MacOS\"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:\"Figma\"})]}),/*#__PURE__*/_jsx(\"h2\",{className:\"aboutHeader\",children:\"DuckMode\"}),/*#__PURE__*/_jsxs(BtnGo,{id:\"bt\",onClick:function onClick(){return _onClick('https://apps.apple.com/sg/app/duckmode/id1586440491?mt=12');},outline:false,children:[\" \",/*#__PURE__*/_jsx(GrAppleAppStore,{})]}),\" \",/*#__PURE__*/_jsx(\"p\",{children:\"Try It Now\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"aboutInfo\",children:/*#__PURE__*/_jsxs(PText,{children:[\"The application I will like to create is a MacOS application that user can use to find their desired colours, It will allow for users to get colours they might want from a light/dark to dark/light mode especially in context of developers where now dark and light mode is almost a need to be supported in their apps.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"WHY?\",/*#__PURE__*/_jsx(\"br\",{}),\"To Solve issue of user needing to have to search and trial their colours in an inefficient way instead they can get their colours no matter what type of colour code they input ALL JUST IN DUCKMODE.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"I designed this logo with the idea of trying to express evolution since duck's evolution is similar to colors in different tones starting from Egg to Duck theres a lot of stages in between which also represents the diff color tones it has to get from light to dark and vice versa.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"DarkMode was my initial app name but i wanted more branding for this app which is why i made a pun out of it from Dark to Duck which sounds similar.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"I designed and created this Duck logo myself using Figma.\"]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"right\",children:/*#__PURE__*/_jsx(\"img\",{src:DuckMode,alt:\"\"})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"topSect2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"left\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"aboutHeader\",children:\"Design Concepts\"}),/*#__PURE__*/_jsx(\"div\",{className:\"aboutInfo\",children:/*#__PURE__*/_jsxs(PText,{children:[\"Main color I used throughout my application is white and black which is intended because i want to make the app's theme simplistic. However for DuckMode's Icon i used a linear gradient background colour with the left side starting from FFDA6F to end of D6AA2C. I used this gradient due to my own interpretation of an actual Duck's colour. As for text color I used black and white as the base according to user\\u2019s environment setting whether dark or light mode.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"\\u200B \\u200B As you can see from the first 2 images below of the difference in light and dark mode.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"For the Sf Symbols i used i added a rgb gradient to represent it giving the rgb code while the hex is just grayish colour.\",/*#__PURE__*/_jsx(\"br\",{}),\"  \",/*#__PURE__*/_jsx(\"br\",{}),\"Lastly, if you noticed there are neumorphic designs added in the input field,button and the sf symbols which basically adds shadows, glow effect to make it have a soft, minimal look\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"right2\",children:[/*#__PURE__*/_jsx(\"img\",{src:DarkMode,alt:\"\"}),/*#__PURE__*/_jsx(\"img\",{src:LightMode,alt:\"\"}),/*#__PURE__*/_jsx(\"img\",{src:SfSymbol,alt:\"\"}),/*#__PURE__*/_jsx(\"img\",{src:Neuro,alt:\"\"})]})]}),/*#__PURE__*/_jsxs(AboutImagesStyles,{children:[/*#__PURE__*/_jsx(SectTitle,{heading:\"Wireframes\",subheading:\"DuckMode's\"}),/*#__PURE__*/_jsx(\"div\",{className:\"projAllItem\",children:/*#__PURE__*/_jsx(Swiper,{spaceBetween:22,slidesPerView:1,navigation:true,breakpoints:{640:{slidesPerView:1},760:{slidesPerView:2},1200:{slidesPerView:3}},children:duckModeSS.map(function(project,index){if(index>=5)return;return/*#__PURE__*/_jsx(SwiperSlide,{children:/*#__PURE__*/_jsx(AboutDesigns,{title:project.name,img:project.img,desc:project.desc})},project.id);})})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(SectTitle,{heading:\"Conclusion\",subheading:\"DuckMode's\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"topSect\",children:/*#__PURE__*/_jsx(\"div\",{className:\"topLeft\",children:/*#__PURE__*/_jsx(\"div\",{className:\"aboutInfo\",children:/*#__PURE__*/_jsxs(PText,{children:[\"This application was my first attempt on playing around colour codes especially playing with NSColor which is Swift's MacOS & AppKit colour Class. I will say that this application is more algorithm based since i went for simplistic UI design and focused more on the colour converting algorithm. It was tough at first because of limited knowledge but after i understood the colour more after 1 week of research and testing.\",/*#__PURE__*/_jsx(\"br\",{}),\"      \",/*#__PURE__*/_jsx(\"br\",{}),\"This is such a fruitful experience since i actually learn more than just colour too since its my First MacOs Application. Hope users will like my application since i enjoy being able to help in little ways like this. Feel free to contact me for any collaboration or feedback, my contact details are below.\"]})})})})]})});}","map":{"version":3,"sources":["/Users/cavenlim/CavenLim site backup/src/pages/DuckModeDetails.js"],"names":["React","PText","Button","DuckMode","IconsAll","topTaskCow","styled","AboutInfoItem","SectTitle","Swiper","SwiperSlide","duckModeSS","AboutDesigns","SwiperCore","Navigation","GrAppleAppStore","DarkMode","LightMode","SfSymbol","Neuro","use","onClick","urlName","window","open","BtnGo","button","AboutTaskCowStyles","div","AboutImagesStyles","AboutPageStyles","DuckModeDetails","slidesPerView","map","project","index","name","img","desc","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PText from '../Components/Text';\nimport Button from '../Components/Button';\nimport DuckMode from '../assets/Images/DuckModeIcon.png'\nimport IconsAll from'../assets/DesignConceptTaskCow/IconsAll.png';\n\nimport topTaskCow from '../assets/Images/topTaskCow.png';\nimport styled from 'styled-components';\nimport AboutInfoItem from '../Components/AboutInfoItem';\nimport SectTitle from '../Components/SectTitle'\nimport {Swiper, SwiperSlide} from 'swiper/react';\nimport duckModeSS from '../assets/data/duckModeSS';\nimport AboutDesigns from '../Components/AboutDesigns';\nimport SwiperCore , {Navigation} from 'swiper';\nimport {GrAppleAppStore} from 'react-icons/gr';\n\n\n//duckMode design concepts images\n\nimport DarkMode from '../assets/DuckModeImages/DarkMode.png'\nimport LightMode from '../assets/DuckModeImages/LightMode.png'\nimport SfSymbol from '../assets/DuckModeImages/SfSymbols.png'\nimport Neuro from '../assets/DuckModeImages/Neuro.png'\n\nSwiperCore.use([Navigation])\n\n\n// for new windows open url\nfunction onClick(urlName){\n    window.open(\n        urlName,\n        '_blank' //open in a new window.\n      );\n  \n}\n\nconst BtnGo = styled.button`\n\n    background-color: transparent;\n    border-radius:4rem;\n    border: none; \n    color: white;\n    width:5rem ;\n    height:5rem ;\n    font-size: 0.5rem; \n    cursor: pointer;\n \n\n    path{\n        color:var(--white);\n     \n    }\n\n   \n    @media only screen and (max-width:760px){\n        align-self: center;\n       justify-self: center;\n       \n   \n    }\n    \n\n\n\n`\n\nconst AboutTaskCowStyles = styled.div`\n.projectItemImg{\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    border-radius: 12px;\n    display: inline-block;\n    border:3px solid var(--gray-2);\n    img{\n        height:100%;\n    }\n}\n\n.projectInfo{\n    margin-top: 1rem;\n    background-color: var(--deep-dark);\n    padding:1rem;\n    border-radius: 12px;\n}\n.projectItemTitle{\n    font-size: 2.2rem;\n}\n\n.projectItemDesc{\n    font-size:1.6rem;\n    font-family: -apple-system, BlinkMacSystemFont;\n    margin-top: 1rem;\n}\n\n/* @media only screen and (max-width:760px){\n\n    .projectItemImg{\n        height: 350px;\n    }\n\n} */\n\n\n`\n\n\n\nconst AboutImagesStyles = styled.div`\n    padding: 10rem 0 ;\n\n    .projAllItem{\n        display: flex;\n        gap:3rem;\n        margin-top: 5rem;\n        align-self: center;\n\n\n    }\n\n    .swiper-container{\n        padding-top:8rem;\n        max-width: 100%;\n    }\n\n   \n    .swiper-button-prev,.swiper-button-next{\n        position: absolute;\n        height:50px;\n        width: 50px;\n        background-color: var(--deep-dark);\n        z-index:10;\n        right:60px;\n        left:auto;\n        top:0;\n        transform:translateY(50%);\n        color:var(--gray-1);\n        border-radius: 8px;\n    }\n    .swiper-button-next{\n        right:0;\n    }\n    .swiper-button-prev:after,.swiper-button-next:after{\n        font-size:2rem;\n    }\n    .projectItemImg{\n                height: 80%;\n                width: 80%;\n                margin-left:4.3rem;\n               \n    }   \n\n    @media only screen and (max-width:760px){\n        .projAllItem{\n            flex-direction: column;\n            max-width: 400px;\n            margin:0 auto;\n            margin-top:7rem;\n            gap:5rem;\n            .projectItemImg{\n                margin-left:6rem;\n                width: 60%;\n                \n            }\n        }\n    }\n\n\n\n`\n\nconst AboutPageStyles = styled.div`\n    padding:20rem 0 10rem 0;\n    .topSect{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        \n        gap:2rem;\n    }\n\n    .topSect2{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n        \n        gap:2rem;\n    }\n    .left{\n        flex:3;\n        \n    }\n    .right{\n        flex:2;\n       \n       \n    }\n    .right2{\n        /* flex:33.33%; */\n        display: row;\n        img{\n            margin:1rem;\n            width: 300px;\n            height: 300px;\n            object-fit: contain;\n           \n            \n           \n           \n        }\n       \n    }\n\n    \n\n    .topLeft{\n        flex:3\n    }\n    .topRight{\n        flex:3\n    }\n    .aboutSubHead{\n        font-size: 2.2rem;\n        margin-bottom:2rem;\n        display: block;\n        margin-right: 1rem;\n        \n        span{\n            background-color: var(--deep-dark);\n            padding:1rem;\n            border-radius:9px;\n           \n        }\n    }\n\n    .aboutHeader{\n        font-size: 3.6rem;\n        margin-bottom:3rem;\n    }\n    .aboutInfo{\n        margin-bottom: 4rem;\n        .para{\n            max-width: 100%;\n        }\n    }\n   \n    .aboutInfoItems{\n        margin-top: 15rem;\n    }\n    .aboutInfoItem{\n        margin-bottom:10rem;\n    }\n    .aboutHeader{\n        font-size: 3.6rem;\n        text-transform:uppercase;\n    }\n\n    @media only screen and (max-width:830px){\n        padding:10rem 0 ;\n        .topSect{\n            flex-direction: column;\n            gap:5rem;\n\n        }\n        .right2{\n            display: flex;\n            flex-direction: column;\n            span{\n                display: flex;\n                flex-direction:column;\n                margin-top:1rem;\n            }\n        }\n        .aboutSubHead{\n            font-size: 1.7rem;\n            span{\n                display: flex;\n                flex-direction:column;\n                margin-top:1rem;\n            }\n        }\n        .aboutHeader{\n            font-size: 3rem;\n        }\n\n    }\n\n\n`\n\nexport default function DuckModeDetails() {\n    return (\n        <AboutPageStyles>\n            <div className=\"container\">\n                \n                <div className=\"topSect\">\n                    <div className=\"left\">\n                        \n                        <p className=\"aboutSubHead\">\n                           <span>SwiftUi</span> <span>MacOS</span> <span>Figma</span>\n                           \n                           \n                        </p>\n                        <h2 className=\"aboutHeader\">\n                            DuckMode\n                        </h2>\n                    \n                <BtnGo id=\"bt\" onClick={() => onClick('https://apps.apple.com/sg/app/duckmode/id1586440491?mt=12')} outline={false}> <GrAppleAppStore/></BtnGo> <p>Try It Now</p>\n                <br/><br/>\n                        <div className=\"aboutInfo\">\n                            <PText>\n                            The application I will like to create is a MacOS application that user can use to find their desired colours, It will allow for users to get colours they might want from a light/dark to dark/light mode especially in context of developers where now dark and light mode is almost a need to be supported in their apps.\n                        <br/><br/>\n                        WHY?\n                        <br/>\n                        To Solve issue of user needing to have to search and trial their colours in an inefficient way instead they can get their colours no matter what type of colour code they input ALL JUST IN DUCKMODE.\n                        \n                        <br/><br/>\n                       \n                        I designed this logo with the idea of trying to express evolution since duck's evolution is similar to colors in different tones starting from Egg to Duck theres a lot of stages in between which also represents the diff color tones it has to get from light to dark and vice versa. \n                        <br/><br/>\n                        DarkMode was my initial app name but i wanted more branding for this app which is why i made a pun out of it from Dark to Duck which sounds similar.\n                        <br/><br/>\n                        I designed and created this Duck logo myself using Figma.\n                            </PText>\n                        </div>\n                     \n                    </div>\n                    \n                    <div className=\"right\">\n                        <img src={DuckMode} alt=\"\"/>\n\n                       \n                    </div>\n\n                </div>\n\n\n                <br/><br/><br/><br/>\n\n                <div className=\"topSect2\">\n                    <div className=\"left\">\n                       \n                        <h2 className=\"aboutHeader\">\n                            Design Concepts\n                        </h2>\n                        <div className=\"aboutInfo\">\n                            <PText>\n\n                          \n                            Main color I used throughout my application is white and black which is intended because i want to make the app's theme simplistic.\n                            However for DuckMode's Icon i used a linear gradient background colour with the left side starting from FFDA6F to end of D6AA2C. I used this gradient\n                            due to my own interpretation of an actual Duck's colour.\n                            As for text color I used black and white as the base according to user’s environment setting whether dark or light mode.\n                            <br/><br/>\n          \n​\n​\n                            As you can see from the first 2 images below of the difference in light and dark mode.\n                            <br/><br/>\n                            For the Sf Symbols i used i added a rgb gradient to represent it giving the rgb code while the hex is just grayish colour.\n\n                            <br/>  <br/>\n                            Lastly, if you noticed there are neumorphic designs added in the input field,button and the sf symbols which basically adds shadows, glow effect to make it have a soft, minimal look\n\n                            </PText>\n                        </div>\n                     \n                    </div>\n\n                    <div className=\"right2\">\n                        <img src={DarkMode} alt=\"\"/>\n                        <img src={LightMode} alt=\"\"/>\n                       <img src={SfSymbol} alt=\"\"/>\n                       <img src={Neuro} alt=\"\"/>\n                        \n                    </div>\n                 \n   \n                    \n\n                </div>\n\n\n\n               \n               \n                <AboutImagesStyles>\n\n           \n                <SectTitle heading=\"Wireframes\" subheading=\"DuckMode's\"/>\n                <div className=\"projAllItem\">\n                    <Swiper spaceBetween={22} slidesPerView={1} navigation\n\n                    breakpoints = {\n                        {\n                            640:{\n                                slidesPerView:1,\n                            },\n                            760:{\n                                slidesPerView:2,\n                            },\n                            1200:{\n                                slidesPerView:3,\n                            }\n                        }\n                    \n                    }\n                  \n                    >\n                        {duckModeSS.map((project, index)=>{\n                            if (index >= 5) return;\n\n                            return(\n                                <SwiperSlide key={project.id}>\n                                    <AboutDesigns\n                                    title = {project.name}\n                                    img = {project.img}\n                                    desc = {project.desc}\n                                    />      \n                                </SwiperSlide>\n                                \n                            )\n\n                        })}\n\n                    </Swiper>\n                </div>\n                </AboutImagesStyles>\n\n\n\n                <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\n \n                <SectTitle heading=\"Conclusion\" subheading=\"DuckMode's\"/><br/><br/><br/><br/><br/><br/>\n\n                <div className=\"topSect\">\n                    <div className=\"topLeft\">\n                   \n                        \n                        <div className=\"aboutInfo\">\n                            <PText>\n                                This application was my first attempt on playing around colour codes especially playing with NSColor which is Swift's MacOS & AppKit colour Class. I will say\n                                that this application is more algorithm based since i went for simplistic UI design and focused more on the colour converting algorithm. It was tough at first because\n                                of limited knowledge but after i understood the colour more after 1 week of research and testing.\n\n                                <br/>      <br/>\n\n                                This is such a fruitful experience since i actually learn more than just colour too since its my First MacOs Application. Hope users will like my application since i enjoy\n                                being able to help in little ways like this. Feel free to contact me for any collaboration or feedback, my contact details are below.\n\n\n                            </PText>\n                        </div>\n                     \n                    </div>\n                 \n\n                </div>\n            \n\n            </div>\n        </AboutPageStyles>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}