{"ast":null,"code":"var logicals = {\n  \"start-start\": {\n    ltr: \"left-start\",\n    rtl: \"right-start\"\n  },\n  \"start-end\": {\n    ltr: \"left-end\",\n    rtl: \"right-end\"\n  },\n  \"end-start\": {\n    ltr: \"right-start\",\n    rtl: \"left-start\"\n  },\n  \"end-end\": {\n    ltr: \"right-end\",\n    rtl: \"left-end\"\n  },\n  start: {\n    ltr: \"left\",\n    rtl: \"right\"\n  },\n  end: {\n    ltr: \"right\",\n    rtl: \"left\"\n  }\n};\nvar opposites = {\n  \"auto-start\": \"auto-end\",\n  \"auto-end\": \"auto-start\",\n  \"top-start\": \"top-end\",\n  \"top-end\": \"top-start\",\n  \"bottom-start\": \"bottom-end\",\n  \"bottom-end\": \"bottom-start\"\n};\nexport function getPopperPlacement(placement, dir) {\n  var _logicals$placement, _opposites$placement;\n  if (dir === void 0) {\n    dir = \"ltr\";\n  }\n  var value = ((_logicals$placement = logicals[placement]) == null ? void 0 : _logicals$placement[dir]) || placement;\n  if (dir === \"ltr\") return value;\n  return (_opposites$placement = opposites[placement]) != null ? _opposites$placement : value;\n}","map":{"version":3,"names":["logicals","ltr","rtl","start","end","opposites","getPopperPlacement","placement","dir","_logicals$placement","_opposites$placement","value"],"sources":["/Users/cavenlim/CavenLim site backup/node_modules/@chakra-ui/popper/src/popper.placement.ts"],"sourcesContent":["import type { Placement } from \"@popperjs/core\"\n\ntype Logical =\n  | \"start-start\"\n  | \"start-end\"\n  | \"end-start\"\n  | \"end-end\"\n  | \"start\"\n  | \"end\"\n\ntype PlacementWithLogical = Placement | Logical\n\nexport type { Placement, PlacementWithLogical }\n\nconst logicals: Record<Logical, { ltr: Placement; rtl: Placement }> = {\n  \"start-start\": { ltr: \"left-start\", rtl: \"right-start\" },\n  \"start-end\": { ltr: \"left-end\", rtl: \"right-end\" },\n  \"end-start\": { ltr: \"right-start\", rtl: \"left-start\" },\n  \"end-end\": { ltr: \"right-end\", rtl: \"left-end\" },\n  start: { ltr: \"left\", rtl: \"right\" },\n  end: { ltr: \"right\", rtl: \"left\" },\n}\n\nconst opposites: Partial<Record<Placement, Placement>> = {\n  \"auto-start\": \"auto-end\",\n  \"auto-end\": \"auto-start\",\n  \"top-start\": \"top-end\",\n  \"top-end\": \"top-start\",\n  \"bottom-start\": \"bottom-end\",\n  \"bottom-end\": \"bottom-start\",\n}\n\nexport function getPopperPlacement(\n  placement: PlacementWithLogical,\n  dir: \"ltr\" | \"rtl\" = \"ltr\",\n): Placement {\n  const value = (logicals[placement]?.[dir] || placement) as Placement\n  if (dir === \"ltr\") return value\n  return opposites[placement] ?? value\n}\n"],"mappings":"AAcA,IAAMA,QAA6D,GAAG;EACpE,eAAe;IAAEC,GAAG,EAAE,YAAP;IAAqBC,GAAG,EAAE;EAA1B,CADqD;EAEpE,aAAa;IAAED,GAAG,EAAE,UAAP;IAAmBC,GAAG,EAAE;EAAxB,CAFuD;EAGpE,aAAa;IAAED,GAAG,EAAE,aAAP;IAAsBC,GAAG,EAAE;EAA3B,CAHuD;EAIpE,WAAW;IAAED,GAAG,EAAE,WAAP;IAAoBC,GAAG,EAAE;EAAzB,CAJyD;EAKpEC,KAAK,EAAE;IAAEF,GAAG,EAAE,MAAP;IAAeC,GAAG,EAAE;EAApB,CAL6D;EAMpEE,GAAG,EAAE;IAAEH,GAAG,EAAE,OAAP;IAAgBC,GAAG,EAAE;EAArB;AAN+D,CAAtE;AASA,IAAMG,SAAgD,GAAG;EACvD,cAAc,UADyC;EAEvD,YAAY,YAF2C;EAGvD,aAAa,SAH0C;EAIvD,WAAW,WAJ4C;EAKvD,gBAAgB,YALuC;EAMvD,cAAc;AANyC,CAAzD;AASA,OAAO,SAASC,kBAATA,CACLC,SADK,EAELC,GAFK,EAGM;EAAA,IAAAC,mBAAA,EAAAC,oBAAA;EAAA,IADXF,GACW;IADXA,GACW,GADU,KACV;EAAA;EACX,IAAMG,KAAK,GAAI,EAAAF,mBAAA,GAAAT,QAAQ,CAACO,SAAD,CAAR,qBAAAE,mBAAA,CAAsBD,GAAtB,MAA8BD,SAA7C;EACA,IAAIC,GAAG,KAAK,KAAZ,EAAmB,OAAOG,KAAP;EACnB,QAAAD,oBAAA,GAAOL,SAAS,CAACE,SAAD,CAAhB,YAAAG,oBAAA,GAA+BC,KAA/B;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}