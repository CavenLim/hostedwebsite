{"ast":null,"code":"import _slicedToArray from\"/Users/cavenlim/CavenLim site backup/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect,useRef,useCallback,forwardRef}from\"react\";import{Box,Spinner,useFormControlProps}from\"@chakra-ui/react\";import*as THREE from\"three\";import{OrbitControls}from'three/examples/jsm/controls/OrbitControls';import{loadGLTFModel}from\"./Model\";import{DogSpinner,DogContainer}from'./VoxelDogLoader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function easeOutCirc(x){return Math.sqrt(1-Math.pow(x-1,4));}var VoxelDog=function VoxelDog(){var refContainer=useRef();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),renderer=_useState4[0],setRenderer=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),_camera=_useState6[0],setCamera=_useState6[1];var _useState7=useState(new THREE.Vector3(-0.5,1.2,0)),_useState8=_slicedToArray(_useState7,1),target=_useState8[0];var _useState9=useState(new THREE.Vector3(0,100,1000)),_useState10=_slicedToArray(_useState9,1),initialCameraPosition=_useState10[0];var _useState11=useState(new THREE.Scene()),_useState12=_slicedToArray(_useState11,1),scene=_useState12[0];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),_controls=_useState14[0],setControls=_useState14[1];useEffect(function(){var container=refContainer.current;if(container&&!renderer){var scW=container.clientWidth;var scH=container.clientHeight;var _renderer=new THREE.WebGLRenderer({antialias:true,alpha:true});_renderer.setPixelRatio(window.devicePixelRatio);_renderer.setSize(window.innerWidth*0.85,640);_renderer.outputEncoding=THREE.sRGBEncoding;container.appendChild(_renderer.domElement);setRenderer(_renderer);var scale=scH*0.005+4.8;var camera=new THREE.OrthographicCamera(-scale,scale,scale,-scale,0.01,10000);camera.position.copy(initialCameraPosition);camera.lookAt(target);setCamera(camera);var ambientLight=new THREE.AmbientLight(0xcccccc,1);scene.add(ambientLight);var controls=new OrbitControls(camera,_renderer.domElement);controls.autoRotate=true;controls.target=target;setControls(controls);window.addEventListener('resize',function(){_renderer.setSize(window.innerWidth*0.8,560);camera.aspect=window.innerWidth/window.innerHeight;});loadGLTFModel(scene,'/dog2.glb',{receiveShadow:false,castShadow:false}).then(function(){animate();setLoading(false);controls.enableZoom=false;});var req=null;var frame=0;var animate=function animate(){req=requestAnimationFrame(animate);frame=frame<=100?frame+1:frame;if(frame<=100){var p=initialCameraPosition;var rotSpeed=-easeOutCirc(frame/120)*Math.PI*20;camera.position.y=10;camera.position.x=p.x*Math.cos(rotSpeed)+p.z*Math.sin(rotSpeed);camera.position.z=p.z*Math.cos(rotSpeed)-p.x*Math.sin(rotSpeed);camera.lookAt(target);}else{controls.update();}_renderer.render(scene,camera);};return function(){cancelAnimationFrame(req);_renderer.dispose();};}},[]);return/*#__PURE__*/_jsxs(DogContainer,{ref:refContainer,children:[loading&&/*#__PURE__*/_jsx(DogSpinner,{}),\" \"]});};export default VoxelDog;","map":{"version":3,"sources":["/Users/cavenlim/CavenLim site backup/src/Components/VoxelDog.js"],"names":["useState","useEffect","useRef","useCallback","forwardRef","Box","Spinner","useFormControlProps","THREE","OrbitControls","loadGLTFModel","DogSpinner","DogContainer","easeOutCirc","x","Math","sqrt","pow","VoxelDog","refContainer","loading","setLoading","renderer","setRenderer","_camera","setCamera","Vector3","target","initialCameraPosition","Scene","scene","_controls","setControls","container","current","scW","clientWidth","scH","clientHeight","WebGLRenderer","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","innerWidth","outputEncoding","sRGBEncoding","appendChild","domElement","scale","camera","OrthographicCamera","position","copy","lookAt","ambientLight","AmbientLight","add","controls","autoRotate","addEventListener","aspect","innerHeight","receiveShadow","castShadow","then","animate","enableZoom","req","frame","requestAnimationFrame","p","rotSpeed","PI","y","cos","z","sin","update","render","cancelAnimationFrame","dispose"],"mappings":"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","sourcesContent":["import { useState,useEffect,useRef,useCallback,forwardRef } from \"react\";\nimport { Box,Spinner, useFormControlProps} from \"@chakra-ui/react\";\nimport * as THREE from \"three\";\nimport {OrbitControls} from'three/examples/jsm/controls/OrbitControls';\nimport { loadGLTFModel } from \"./Model\";\nimport { DogSpinner, DogContainer } from './VoxelDogLoader'\n\nfunction easeOutCirc(x){\n    return Math.sqrt(1-Math.pow(x-1,4))\n}\n\nconst VoxelDog = () => {\n    const refContainer = useRef()\n    const [loading,setLoading]=useState(true)\n    const [renderer,setRenderer] = useState()\n    const [_camera,setCamera] = useState()\n    const [target] = useState(new THREE.Vector3(-0.5,1.2,0))\n    const [initialCameraPosition] = useState(\n        new THREE.Vector3(0,100,1000\n        )\n    )\n    const [scene] = useState(new THREE.Scene())\n    const [_controls,setControls] = useState()\n\n    useEffect(() =>{\n        const { current:container} = refContainer\n        if(container && !renderer){\n            const scW = container.clientWidth\n            const scH = container.clientHeight\n\n            const renderer = new THREE.WebGLRenderer({\n                antialias:true,\n                alpha:true\n\n            })\n            renderer.setPixelRatio(window.devicePixelRatio)\n            renderer.setSize(window.innerWidth*0.85,640);\n            renderer.outputEncoding = THREE.sRGBEncoding\n            container.appendChild(renderer.domElement)\n            setRenderer(renderer)\n\n            const scale = scH * 0.005 + 4.8\n            const camera = new THREE.OrthographicCamera(\n                -scale,scale,scale,-scale,0.01,10000\n            )\n            camera.position.copy(initialCameraPosition)\n            camera.lookAt(target)\n            setCamera(camera)\n\n            const ambientLight = new THREE.AmbientLight(0xcccccc,1)\n            scene.add(ambientLight)\n\n            const controls = new OrbitControls(camera,renderer.domElement)\n            controls.autoRotate = true\n            controls.target = target\n        \n            setControls(controls)\n            window.addEventListener('resize',function(){\n                renderer.setSize(window.innerWidth*0.8,560);\n                camera.aspect=window.innerWidth/window.innerHeight;\n            \n            })\n\n            loadGLTFModel(scene,'/dog2.glb',{\n                receiveShadow: false,\n                castShadow:false\n\n            }).then(()=>{\n                animate()\n                setLoading(false)\n                controls.enableZoom=false\n            })\n            \n            let req = null\n            let frame = 0\n\n            const animate = () => {\n                req = requestAnimationFrame(animate)\n\n                frame = frame <= 100 ? frame + 1 : frame\n\n                if(frame <= 100){\n                    const p = initialCameraPosition\n                    const rotSpeed = -easeOutCirc(frame/120) * Math.PI * 20\n                    camera.position.y=10\n                    camera.position.x= p.x * Math.cos(rotSpeed) + p.z * Math.sin(rotSpeed)\n                    camera.position.z= p.z * Math.cos(rotSpeed) - p.x * Math.sin(rotSpeed)\n                    camera.lookAt(target)\n                }else{\n                    controls.update()\n                }\n                renderer.render(scene,camera)\n            }\n            return () =>{\n                cancelAnimationFrame(req)\n                renderer.dispose()\n            }\n        }\n\n    },[])\n\n    return(\n        <DogContainer ref={refContainer}>{loading && <DogSpinner />} </DogContainer>\n    )\n}\nexport default VoxelDog;"]},"metadata":{},"sourceType":"module"}