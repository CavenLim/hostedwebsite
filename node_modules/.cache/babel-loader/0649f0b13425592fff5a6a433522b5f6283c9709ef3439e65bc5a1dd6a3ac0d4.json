{"ast":null,"code":"import * as React from \"react\";\nexport function useButtonType(value) {\n  var [isButton, setIsButton] = React.useState(!value);\n  var refCallback = React.useCallback(node => {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  var type = isButton ? \"button\" : undefined;\n  return {\n    ref: refCallback,\n    type\n  };\n}","map":{"version":3,"names":["React","useButtonType","value","isButton","setIsButton","useState","refCallback","useCallback","node","tagName","type","undefined","ref"],"sources":["/Users/cavenlim/CavenLim site backup/node_modules/@chakra-ui/button/src/use-button-type.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport function useButtonType(value?: React.ElementType) {\n  const [isButton, setIsButton] = React.useState(!value)\n  const refCallback = React.useCallback((node: HTMLElement | null) => {\n    if (!node) return\n    setIsButton(node.tagName === \"BUTTON\")\n  }, [])\n  const type = isButton ? \"button\" : undefined\n  return { ref: refCallback, type } as const\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,SAASC,aAATA,CAAuBC,KAAvB,EAAkD;EACvD,IAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,KAAK,CAACK,QAAN,CAAe,CAACH,KAAhB,CAAhC;EACA,IAAMI,WAAW,GAAGN,KAAK,CAACO,WAAN,CAAmBC,IAAD,IAA8B;IAClE,IAAI,CAACA,IAAL,EAAW;IACXJ,WAAW,CAACI,IAAI,CAACC,OAAL,KAAiB,QAAlB,CAAX;EACD,CAHmB,EAGjB,EAHiB,CAApB;EAIA,IAAMC,IAAI,GAAGP,QAAQ,GAAG,QAAH,GAAcQ,SAAnC;EACA,OAAO;IAAEC,GAAG,EAAEN,WAAP;IAAoBI;EAApB,CAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}