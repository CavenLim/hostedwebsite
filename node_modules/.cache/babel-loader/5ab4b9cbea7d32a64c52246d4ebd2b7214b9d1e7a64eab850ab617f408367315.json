{"ast":null,"code":"import { noop, PanSession } from \"@chakra-ui/utils\";\nimport { useEffect, useRef } from \"react\";\nimport { usePointerEvent } from \"./use-pointer-event\";\nimport { useUnmountEffect } from \"./use-unmount-effect\";\nexport function usePanGesture(ref, props) {\n  var {\n    onPan,\n    onPanStart,\n    onPanEnd,\n    onPanSessionStart,\n    onPanSessionEnd,\n    threshold\n  } = props;\n  var hasPanEvents = Boolean(onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd);\n  var panSession = useRef(null);\n  var handlers = {\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd(event, info) {\n      panSession.current = null;\n      onPanEnd == null ? void 0 : onPanEnd(event, info);\n    }\n  };\n  useEffect(() => {\n    var _panSession$current;\n    (_panSession$current = panSession.current) == null ? void 0 : _panSession$current.updateHandlers(handlers);\n  });\n  function onPointerDown(event) {\n    panSession.current = new PanSession(event, handlers, threshold);\n  }\n  usePointerEvent(() => ref.current, \"pointerdown\", hasPanEvents ? onPointerDown : noop);\n  useUnmountEffect(() => {\n    var _panSession$current2;\n    (_panSession$current2 = panSession.current) == null ? void 0 : _panSession$current2.end();\n    panSession.current = null;\n  });\n}","map":{"version":3,"names":["noop","PanSession","useEffect","useRef","usePointerEvent","useUnmountEffect","usePanGesture","ref","props","onPan","onPanStart","onPanEnd","onPanSessionStart","onPanSessionEnd","threshold","hasPanEvents","Boolean","panSession","handlers","onSessionStart","onSessionEnd","onStart","onMove","onEnd","event","info","current","_panSession$current","updateHandlers","onPointerDown","_panSession$current2","end"],"sources":["C:\\Code Respositories\\hostedwebsite\\node_modules\\@chakra-ui\\hooks\\src\\use-pan-gesture.ts"],"sourcesContent":["import {\n  AnyPointerEvent,\n  noop,\n  PanEventHandler,\n  PanSession,\n  PanSessionHandlers,\n} from \"@chakra-ui/utils\"\nimport React, { useEffect, useRef } from \"react\"\nimport { usePointerEvent } from \"./use-pointer-event\"\nimport { useUnmountEffect } from \"./use-unmount-effect\"\n\nexport interface UsePanGestureProps {\n  onPan?: PanEventHandler\n  onPanStart?: PanEventHandler\n  onPanEnd?: PanEventHandler\n  onPanSessionStart?: PanEventHandler\n  onPanSessionEnd?: PanEventHandler\n  threshold?: number\n}\n\nexport function usePanGesture(\n  ref: React.RefObject<HTMLElement>,\n  props: UsePanGestureProps,\n) {\n  const {\n    onPan,\n    onPanStart,\n    onPanEnd,\n    onPanSessionStart,\n    onPanSessionEnd,\n    threshold,\n  } = props\n\n  const hasPanEvents = Boolean(\n    onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd,\n  )\n\n  const panSession = useRef<PanSession | null>(null)\n\n  const handlers: Partial<PanSessionHandlers> = {\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd(event, info) {\n      panSession.current = null\n      onPanEnd?.(event, info)\n    },\n  }\n\n  useEffect(() => {\n    panSession.current?.updateHandlers(handlers)\n  })\n\n  function onPointerDown(event: AnyPointerEvent) {\n    panSession.current = new PanSession(event, handlers, threshold)\n  }\n\n  usePointerEvent(\n    () => ref.current,\n    \"pointerdown\",\n    hasPanEvents ? onPointerDown : noop,\n  )\n\n  useUnmountEffect(() => {\n    panSession.current?.end()\n    panSession.current = null\n  })\n}\n"],"mappings":"AAAA,SAEEA,IAFF,EAIEC,UAJF,QAMO,kBANP;AAOA,SAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAWA,OAAO,SAASC,aAATA,CACLC,GADK,EAELC,KAFK,EAGL;EACA,IAAM;IACJC,KADI;IAEJC,UAFI;IAGJC,QAHI;IAIJC,iBAJI;IAKJC,eALI;IAMJC;EANI,IAOFN,KAPJ;EASA,IAAMO,YAAY,GAAGC,OAAO,CAC1BP,KAAK,IAAIC,UAAT,IAAuBC,QAAvB,IAAmCC,iBAAnC,IAAwDC,eAD9B,CAA5B;EAIA,IAAMI,UAAU,GAAGd,MAAM,CAAoB,IAApB,CAAzB;EAEA,IAAMe,QAAqC,GAAG;IAC5CC,cAAc,EAAEP,iBAD4B;IAE5CQ,YAAY,EAAEP,eAF8B;IAG5CQ,OAAO,EAAEX,UAHmC;IAI5CY,MAAM,EAAEb,KAJoC;IAK5Cc,KAAKA,CAACC,KAAD,EAAQC,IAAR,EAAc;MACjBR,UAAU,CAACS,OAAX,GAAqB,IAArB;MACAf,QAAQ,QAAR,YAAAA,QAAQ,CAAGa,KAAH,EAAUC,IAAV,CAAR;IACD;EAR2C,CAA9C;EAWAvB,SAAS,CAAC,MAAM;IAAA,IAAAyB,mBAAA;IACd,CAAAA,mBAAA,GAAAV,UAAU,CAACS,OAAX,qBAAAC,mBAAA,CAAoBC,cAApB,CAAmCV,QAAnC;EACD,CAFQ,CAAT;EAIA,SAASW,aAATA,CAAuBL,KAAvB,EAA+C;IAC7CP,UAAU,CAACS,OAAX,GAAqB,IAAIzB,UAAJ,CAAeuB,KAAf,EAAsBN,QAAtB,EAAgCJ,SAAhC,CAArB;EACD;EAEDV,eAAe,CACb,MAAMG,GAAG,CAACmB,OADG,EAEb,aAFa,EAGbX,YAAY,GAAGc,aAAH,GAAmB7B,IAHlB,CAAf;EAMAK,gBAAgB,CAAC,MAAM;IAAA,IAAAyB,oBAAA;IACrB,CAAAA,oBAAA,GAAAb,UAAU,CAACS,OAAX,qBAAAI,oBAAA,CAAoBC,GAApB;IACAd,UAAU,CAACS,OAAX,GAAqB,IAArB;EACD,CAHe,CAAhB;AAID"},"metadata":{},"sourceType":"module","externalDependencies":[]}